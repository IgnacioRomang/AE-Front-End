{"ast":null,"code":"var _jsxFileName = \"/home/desa04/AE-Front-End/src/fragments/calendar/Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [startDate, setStartDate] = useState(new Date());\n  const nextMonth = () => {\n    const nextDate = new Date(currentDate);\n    nextDate.setMonth(currentDate.getMonth() + 1);\n    setCurrentDate(nextDate);\n  };\n  const prevMonth = () => {\n    const prevDate = new Date(currentDate);\n    prevDate.setMonth(currentDate.getMonth() - 1);\n    setCurrentDate(prevDate);\n  };\n  const daysInMonth = getDaysInMonth(currentDate);\n  const monthName = new Intl.DateTimeFormat(\"es\", {\n    month: \"long\"\n  }).format(currentDate);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `${monthName} ${currentDate.getFullYear()}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: prevMonth,\n      children: \"Anterior\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: nextMonth,\n      children: \"Siguiente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        maxWidth: \"400px\",\n        margin: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [\"Dom\", \"Lun\", \"Mar\", \"Mié\", \"Jue\", \"Vie\", \"Sáb\"].map((day, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                backgroundColor: \"#f2f2f2\",\n                textAlign: \"center\",\n                padding: \"5px\"\n              },\n              children: day\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: chunkArray(daysInMonth, 7).map((row, rowIndex) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: row.map((day, index) => {\n              if (day === startDate.getDate()) {\n                /*#__PURE__*/_jsxDEV(TableCell, {\n                  sx: {\n                    border: \"1px solid #ddd\",\n                    textAlign: \"center\",\n                    padding: \"5px\",\n                    \"&:hover\": {\n                      backgroundColor: \"#f0f0f0\"\n                    }\n                  },\n                  children: day || \" \"\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this);\n              } else {\n                /*#__PURE__*/_jsxDEV(TableCell, {\n                  sx: {\n                    border: \"1px solid #ddd\",\n                    textAlign: \"center\",\n                    padding: \"5px\",\n                    \"&:hover\": {\n                      backgroundColor: \"#f0f0f0\"\n                    }\n                  },\n                  children: day || \" \"\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this);\n              }\n            })\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"D2kSTZGh3szCiquUxaHSd1rGmTU=\");\n_c = Calendar;\nconst getDaysInMonth = date => {\n  const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n  const startingDayOfWeek = firstDay.getDay(); // 0 (Sunday) to 6 (Saturday)\n  const daysInMonth = [];\n\n  // Add empty cells for days before the first day of the month\n  for (let i = 0; i < startingDayOfWeek; i++) {\n    daysInMonth.push(null);\n  }\n  const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n  // Add the days of the month\n  for (let i = 1; i <= lastDay.getDate(); i++) {\n    daysInMonth.push(i);\n  }\n  return daysInMonth;\n};\nconst chunkArray = (arr, size) => {\n  const chunkedArray = [];\n  for (let i = 0; i < arr.length; i += size) {\n    chunkedArray.push(arr.slice(i, i + size));\n  }\n  return chunkedArray;\n};\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","jsxDEV","_jsxDEV","Calendar","_s","currentDate","setCurrentDate","Date","startDate","setStartDate","nextMonth","nextDate","setMonth","getMonth","prevMonth","prevDate","daysInMonth","getDaysInMonth","monthName","Intl","DateTimeFormat","month","format","children","getFullYear","fileName","_jsxFileName","lineNumber","columnNumber","onClick","component","sx","maxWidth","margin","map","day","index","backgroundColor","textAlign","padding","chunkArray","row","rowIndex","getDate","border","_c","date","firstDay","startingDayOfWeek","getDay","i","push","lastDay","arr","size","chunkedArray","length","slice","$RefreshReg$"],"sources":["/home/desa04/AE-Front-End/src/fragments/calendar/Calendar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@mui/material\";\n\nconst Calendar = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [startDate, setStartDate] = useState(new Date());\n  const nextMonth = () => {\n    const nextDate = new Date(currentDate);\n    nextDate.setMonth(currentDate.getMonth() + 1);\n    setCurrentDate(nextDate);\n  };\n\n  const prevMonth = () => {\n    const prevDate = new Date(currentDate);\n    prevDate.setMonth(currentDate.getMonth() - 1);\n    setCurrentDate(prevDate);\n  };\n\n  const daysInMonth = getDaysInMonth(currentDate);\n\n  const monthName = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n    currentDate\n  );\n\n  return (\n    <div>\n      <h2>{`${monthName} ${currentDate.getFullYear()}`}</h2>\n      <Button onClick={prevMonth}>Anterior</Button>\n      <Button onClick={nextMonth}>Siguiente</Button>\n      <TableContainer\n        component={Paper}\n        sx={{ maxWidth: \"400px\", margin: \"auto\" }}\n      >\n        <Table>\n          <TableHead>\n            <TableRow>\n              {[\"Dom\", \"Lun\", \"Mar\", \"Mié\", \"Jue\", \"Vie\", \"Sáb\"].map(\n                (day, index) => (\n                  <TableCell\n                    key={index}\n                    sx={{\n                      backgroundColor: \"#f2f2f2\",\n                      textAlign: \"center\",\n                      padding: \"5px\",\n                    }}\n                  >\n                    {day}\n                  </TableCell>\n                )\n              )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {chunkArray(daysInMonth, 7).map((row, rowIndex) => (\n              <TableRow key={rowIndex}>\n                {row.map((day, index) => {\n                  if (day === startDate.getDate()) {\n                    <TableCell\n                      key={index}\n                      sx={{\n                        border: \"1px solid #ddd\",\n                        textAlign: \"center\",\n                        padding: \"5px\",\n                        \"&:hover\": {\n                          backgroundColor: \"#f0f0f0\",\n                        },\n                      }}\n                    >\n                      {day || \" \"}\n                    </TableCell>;\n                  } else {\n                    <TableCell\n                      key={index}\n                      sx={{\n                        border: \"1px solid #ddd\",\n                        textAlign: \"center\",\n                        padding: \"5px\",\n                        \"&:hover\": {\n                          backgroundColor: \"#f0f0f0\",\n                        },\n                      }}\n                    >\n                      {day || \" \"}\n                    </TableCell>;\n                  }\n                })}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nconst getDaysInMonth = (date) => {\n  const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n  const startingDayOfWeek = firstDay.getDay(); // 0 (Sunday) to 6 (Saturday)\n  const daysInMonth = [];\n\n  // Add empty cells for days before the first day of the month\n  for (let i = 0; i < startingDayOfWeek; i++) {\n    daysInMonth.push(null);\n  }\n\n  const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n  // Add the days of the month\n  for (let i = 1; i <= lastDay.getDate(); i++) {\n    daysInMonth.push(i);\n  }\n\n  return daysInMonth;\n};\n\nconst chunkArray = (arr, size) => {\n  const chunkedArray = [];\n  for (let i = 0; i < arr.length; i += size) {\n    chunkedArray.push(arr.slice(i, i + size));\n  }\n  return chunkedArray;\n};\n\nexport default Calendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}