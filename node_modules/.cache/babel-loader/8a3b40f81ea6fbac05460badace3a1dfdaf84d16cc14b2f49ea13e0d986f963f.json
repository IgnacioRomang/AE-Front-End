{"ast":null,"code":"var _jsxFileName = \"/home/ignacioromang/Projects/AE-Front-End/src/components/FAQ.jsx\",\n  _s = $RefreshSig$();\nimport { Paper, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport Question from \"../fragments/Question\";\n/**\n * React functional component for the FAQ page.\n *\n * @param {object} props - component properties\n * @returns {JSX.Element} - the FAQ page\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FAQ = props => {\n  _s();\n  const [questions, setQuestions] = React.useState([]);\n  const labels = useFAQString();\n\n  /**\n   * Adds the middleware that fetches and sets questions from React's back page\n   */\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let url = process.env.REACT_APP_BACK_URL;\n        const response = await axios.post(url + \"/api/resources/getQuestions\");\n        setQuestions(response.data.map(question => ({\n          ...question,\n          isOpen: false\n        })));\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n        sss;\n      }\n    };\n    fetchData();\n  }, []);\n\n  /**\n   * Toggles the state of the question at the given index. This is used to prevent an unintended change in the state\n   *\n   * @param {number} index - index of the question to toggle\n   */\n  const handleQuestionToggle = index => {\n    setQuestions(prevQuestions => {\n      const updatedQuestions = [...prevQuestions];\n      updatedQuestions[index].isOpen = !updatedQuestions[index].isOpen;\n      return updatedQuestions;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      padding: 5,\n      children: labels.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), questions.map((faq, index) => /*#__PURE__*/_jsxDEV(Question, {\n      question: faq.question,\n      answer: faq.answers,\n      open: faq.isOpen,\n      onToggle: () => handleQuestionToggle(index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(FAQ, \"zwhDm/uCM0Z8wRrcJdlcIK49E78=\", true);\n_c = FAQ;\nexport default FAQ;\nvar _c;\n$RefreshReg$(_c, \"FAQ\");","map":{"version":3,"names":["Paper","Typography","React","Question","jsxDEV","_jsxDEV","FAQ","props","_s","questions","setQuestions","useState","labels","useFAQString","useEffect","fetchData","url","process","env","REACT_APP_BACK_URL","response","axios","post","data","map","question","isOpen","error","console","sss","handleQuestionToggle","index","prevQuestions","updatedQuestions","children","variant","padding","title","fileName","_jsxFileName","lineNumber","columnNumber","faq","answer","answers","open","onToggle","_c","$RefreshReg$"],"sources":["/home/ignacioromang/Projects/AE-Front-End/src/components/FAQ.jsx"],"sourcesContent":["import { Paper, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport Question from \"../fragments/Question\";\n/**\n * React functional component for the FAQ page.\n *\n * @param {object} props - component properties\n * @returns {JSX.Element} - the FAQ page\n */\nconst FAQ = (props) => {\n  const [questions, setQuestions] = React.useState([]);\n  const labels = useFAQString();\n\n  /**\n   * Adds the middleware that fetches and sets questions from React's back page\n   */\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let url = process.env.REACT_APP_BACK_URL;\n        const response = await axios.post(url + \"/api/resources/getQuestions\");\n        setQuestions(\n          response.data.map((question) => ({\n            ...question,\n            isOpen: false,\n          }))\n        );\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n        sss;\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  /**\n   * Toggles the state of the question at the given index. This is used to prevent an unintended change in the state\n   *\n   * @param {number} index - index of the question to toggle\n   */\n  const handleQuestionToggle = (index) => {\n    setQuestions((prevQuestions) => {\n      const updatedQuestions = [...prevQuestions];\n      updatedQuestions[index].isOpen = !updatedQuestions[index].isOpen;\n      return updatedQuestions;\n    });\n  };\n\n  return (\n    <Paper>\n      <Typography variant=\"h5\" padding={5}>\n        {labels.title}\n      </Typography>\n      {questions.map((faq, index) => (\n        <Question\n          key={index}\n          question={faq.question}\n          answer={faq.answers}\n          open={faq.isOpen}\n          onToggle={() => handleQuestionToggle(index)}\n        />\n      ))}\n    </Paper>\n  );\n};\n\nexport default FAQ;\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,UAAU,QAAQ,eAAe;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,GAAG,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMC,MAAM,GAAGC,YAAY,CAAC,CAAC;;EAE7B;AACF;AACA;EACEX,KAAK,CAACY,SAAS,CAAC,MAAM;IACpB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,IAAIC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB;QACxC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAACN,GAAG,GAAG,6BAA6B,CAAC;QACtEN,YAAY,CACVU,QAAQ,CAACG,IAAI,CAACC,GAAG,CAAEC,QAAQ,KAAM;UAC/B,GAAGA,QAAQ;UACXC,MAAM,EAAE;QACV,CAAC,CAAC,CACJ,CAAC;MACH,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDE,GAAG;MACL;IACF,CAAC;IAEDd,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;AACF;AACA;AACA;AACA;EACE,MAAMe,oBAAoB,GAAIC,KAAK,IAAK;IACtCrB,YAAY,CAAEsB,aAAa,IAAK;MAC9B,MAAMC,gBAAgB,GAAG,CAAC,GAAGD,aAAa,CAAC;MAC3CC,gBAAgB,CAACF,KAAK,CAAC,CAACL,MAAM,GAAG,CAACO,gBAAgB,CAACF,KAAK,CAAC,CAACL,MAAM;MAChE,OAAOO,gBAAgB;IACzB,CAAC,CAAC;EACJ,CAAC;EAED,oBACE5B,OAAA,CAACL,KAAK;IAAAkC,QAAA,gBACJ7B,OAAA,CAACJ,UAAU;MAACkC,OAAO,EAAC,IAAI;MAACC,OAAO,EAAE,CAAE;MAAAF,QAAA,EACjCtB,MAAM,CAACyB;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACZhC,SAAS,CAACe,GAAG,CAAC,CAACkB,GAAG,EAAEX,KAAK,kBACxB1B,OAAA,CAACF,QAAQ;MAEPsB,QAAQ,EAAEiB,GAAG,CAACjB,QAAS;MACvBkB,MAAM,EAAED,GAAG,CAACE,OAAQ;MACpBC,IAAI,EAAEH,GAAG,CAAChB,MAAO;MACjBoB,QAAQ,EAAEA,CAAA,KAAMhB,oBAAoB,CAACC,KAAK;IAAE,GAJvCA,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKX,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEZ,CAAC;AAACjC,EAAA,CAxDIF,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AA0DT,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}