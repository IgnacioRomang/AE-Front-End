{"ast":null,"code":"var _jsxFileName = \"/home/ignacioromang/Projects/AE-Front-End/src/components/InfoCard.jsx\",\n  _s = $RefreshSig$();\nimport { Skeleton } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme } from \"@mui/material/styles\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { infoCArdStyle } from \"../theme\";\n\n/**\n * A high-resolution display configuration object.\n * @typedef {Object} HighResDisplayConfig\n * @property {string} display.xs - The display style for extra-small screens.\n * @property {string} display.md - The display style for medium screens.\n * @property {string} display.lg - The display style for large screens.\n */\n\n/**\n * A card style object for the info card component.\n * @typedef {Object} InfoCardStyle\n * @property {import(\"@mui/system\").CSSObject} card - The CSS styles for the card component.\n */\n\n/**\n * Props for the InfoCard component.\n * @typedef {Object} InfoCardProps\n * @property {boolean} state - Indicates whether the card is in a loading state.\n * @property {Object} pdf - The PDF document data.\n */\n\n/**\n * A component that displays an info card for a PDF document.\n * @param {InfoCardProps} props - The props for the InfoCard component.\n * @returns {JSX.Element} A React element that displays an info card for a PDF document.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InfoCard(props) {\n  _s();\n  const {\n    state,\n    pdf\n  } = props;\n  const [loading, setLoading] = useState(state);\n  const navigate = useNavigate();\n\n  /**\n   * A high-resolution display configuration object.\n   * @type {HighResDisplayConfig}\n   */\n  const highResDisplay = {\n    display: {\n      xs: \"none\",\n      md: \"flex\",\n      lg: \"flex\"\n    }\n  };\n\n  /**\n   * A card style object for the info card component.\n   * @type {InfoCardStyle}\n   */\n  const infoCardStyle = {\n    card: {\n      maxWidth: 345,\n      margin: \"auto\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      boxShadow: 3,\n      \"&:hover\": {\n        boxShadow: 6\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: infoCardStyle.card,\n    children: [loading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n      variant: \"rectangular\",\n      height: \"25vh\",\n      width: \"30vw\",\n      sx: {\n        display: highResDisplay.display\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CardMedia, {\n      sx: {\n        display: highResDisplay.display,\n        height: 140\n      },\n      image: `data:image/png;base64,${pdf.img}`,\n      title: pdf.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"div\",\n        children: loading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 22\n        }, this) : pdf.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: loading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"rectangular\",\n          height: 80,\n          width: \"30vw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this) : pdf.abstract\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        disabled: loading,\n        onClick: () => {\n          navigate(\"/document/\" + pdf.id);\n        },\n        children: \"Leer mas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(InfoCard, \"Bff9f8q/NrubaUsmcBLe3MYEb7c=\", false, function () {\n  return [useNavigate];\n});\n_c = InfoCard;\nexport default InfoCard;\nvar _c;\n$RefreshReg$(_c, \"InfoCard\");","map":{"version":3,"names":["Skeleton","Button","Card","CardActions","CardContent","CardMedia","Typography","createTheme","React","useState","useNavigate","infoCArdStyle","jsxDEV","_jsxDEV","InfoCard","props","_s","state","pdf","loading","setLoading","navigate","highResDisplay","display","xs","md","lg","infoCardStyle","card","maxWidth","margin","flexDirection","justifyContent","alignItems","boxShadow","sx","children","variant","height","width","fileName","_jsxFileName","lineNumber","columnNumber","image","img","title","gutterBottom","component","color","abstract","size","disabled","onClick","id","_c","$RefreshReg$"],"sources":["/home/ignacioromang/Projects/AE-Front-End/src/components/InfoCard.jsx"],"sourcesContent":["import { Skeleton } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme } from \"@mui/material/styles\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { infoCArdStyle } from \"../theme\";\n\n/**\n * A high-resolution display configuration object.\n * @typedef {Object} HighResDisplayConfig\n * @property {string} display.xs - The display style for extra-small screens.\n * @property {string} display.md - The display style for medium screens.\n * @property {string} display.lg - The display style for large screens.\n */\n\n/**\n * A card style object for the info card component.\n * @typedef {Object} InfoCardStyle\n * @property {import(\"@mui/system\").CSSObject} card - The CSS styles for the card component.\n */\n\n/**\n * Props for the InfoCard component.\n * @typedef {Object} InfoCardProps\n * @property {boolean} state - Indicates whether the card is in a loading state.\n * @property {Object} pdf - The PDF document data.\n */\n\n/**\n * A component that displays an info card for a PDF document.\n * @param {InfoCardProps} props - The props for the InfoCard component.\n * @returns {JSX.Element} A React element that displays an info card for a PDF document.\n */\nfunction InfoCard(props) {\n  const { state, pdf } = props;\n  const [loading, setLoading] = useState(state);\n  const navigate = useNavigate();\n\n  /**\n   * A high-resolution display configuration object.\n   * @type {HighResDisplayConfig}\n   */\n  const highResDisplay = {\n    display: {\n      xs: \"none\",\n      md: \"flex\",\n      lg: \"flex\",\n    },\n  };\n\n  /**\n   * A card style object for the info card component.\n   * @type {InfoCardStyle}\n   */\n  const infoCardStyle = {\n    card: {\n      maxWidth: 345,\n      margin: \"auto\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      boxShadow: 3,\n      \"&:hover\": {\n        boxShadow: 6,\n      },\n    },\n  };\n\n  return (\n    <Card sx={infoCardStyle.card}>\n      {loading ? (\n        <Skeleton\n          variant=\"rectangular\"\n          height={\"25vh\"}\n          width={\"30vw\"}\n          sx={{\n            display: highResDisplay.display,\n          }}\n        />\n      ) : (\n        <CardMedia\n          sx={{\n            display: highResDisplay.display,\n            height: 140,\n          }}\n          image={`data:image/png;base64,${pdf.img}`}\n          title={pdf.title}\n        />\n      )}\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\n          {loading ? <Skeleton /> : pdf.title}\n        </Typography>\n\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {loading ? (\n            <Skeleton variant=\"rectangular\" height={80} width={\"30vw\"} />\n          ) : (\n            pdf.abstract\n          )}\n        </Typography>\n      </CardContent>\n\n      <CardActions>\n        <Button\n          size=\"small\"\n          disabled={loading}\n          onClick={() => {\n            navigate(\"/document/\" + pdf.id);\n          }}\n        >\n          Leer mas\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default InfoCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}