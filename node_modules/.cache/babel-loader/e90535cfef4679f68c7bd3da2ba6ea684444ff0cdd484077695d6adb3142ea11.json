{"ast":null,"code":"var _jsxFileName = \"/home/ignacioromang/Projects/AE-Front-End/src/fragments/PasswordFragment.jsx\",\n  _s = $RefreshSig$();\nimport { Stack, TextField, Box } from \"@mui/material\";\nimport React from \"react\";\nimport { useResetPasswordString } from \"../contexts/TextProvider\";\nimport { testpassword } from \"../utiles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordFragment = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n  const [passwordChange, setPasswordChange] = React.useState({\n    password: \"\",\n    newps: \"\",\n    renewps: \"\"\n  });\n  const [error, setError] = React.useState(false);\n  const labels = useResetPasswordString();\n  const handleChange = (field, value) => {\n    setPasswordChange(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const sendData = () => {\n    setError(!testpassword(passwordChange.newps, passwordChange.renewps));\n    return [error, error ? {\n      current_password: passwordChange.password,\n      new_password: passwordChange.newps,\n      new_password_confirmation: passwordChange.renewps\n    } : null];\n  };\n  React.useImperativeHandle(ref, () => ({\n    sendData\n  }));\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 1,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"password\",\n      sx: {\n        width: \"25vw\"\n      },\n      label: labels.textFieldLabels[0],\n      required: true,\n      value: passwordChange.password,\n      onChange: event => {\n        handleChange(\"password\", event.target.value);\n      },\n      type: \"password\",\n      variant: \"standard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"password\",\n      label: labels.textFieldLabels[1],\n      type: \"password\",\n      sx: {\n        width: \"25vw\"\n      },\n      required: true,\n      error: error,\n      value: passwordChange.newps,\n      onChange: event => {\n        handleChange(\"newps\", event.target.value);\n      },\n      variant: \"standard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"passwordres\",\n      label: labels.textFieldLabels[2],\n      type: \"password\",\n      sx: {\n        width: \"25vw\"\n      },\n      required: true,\n      error: error,\n      value: passwordChange.renewps,\n      onChange: event => {\n        handleChange(\"renewps\", event.target.value);\n      },\n      variant: \"standard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}, \"+/WWySuEGvOLfxqj5RX6+6zrz2k=\", false, function () {\n  return [useResetPasswordString];\n})), \"+/WWySuEGvOLfxqj5RX6+6zrz2k=\", false, function () {\n  return [useResetPasswordString];\n});\n_c2 = PasswordFragment;\nexport default PasswordFragment;\nvar _c, _c2;\n$RefreshReg$(_c, \"PasswordFragment$React.forwardRef\");\n$RefreshReg$(_c2, \"PasswordFragment\");","map":{"version":3,"names":["Stack","TextField","Box","React","useResetPasswordString","testpassword","jsxDEV","_jsxDEV","PasswordFragment","_s","forwardRef","_c","props","ref","passwordChange","setPasswordChange","useState","password","newps","renewps","error","setError","labels","handleChange","field","value","prev","sendData","current_password","new_password","new_password_confirmation","useImperativeHandle","spacing","children","id","sx","width","label","textFieldLabels","required","onChange","event","target","type","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/ignacioromang/Projects/AE-Front-End/src/fragments/PasswordFragment.jsx"],"sourcesContent":["import { Stack, TextField, Box } from \"@mui/material\";\nimport React from \"react\";\nimport { useResetPasswordString } from \"../contexts/TextProvider\";\nimport { testpassword } from \"../utiles\";\n\nconst PasswordFragment = React.forwardRef((props, ref) => {\n  const [passwordChange, setPasswordChange] = React.useState({\n    password: \"\",\n    newps: \"\",\n    renewps: \"\",\n  });\n  const [error, setError] = React.useState(false);\n  const labels = useResetPasswordString();\n\n  const handleChange = (field, value) => {\n    setPasswordChange((prev) => ({ ...prev, [field]: value }));\n  };\n\n  const sendData = () => {\n    setError(!testpassword(passwordChange.newps, passwordChange.renewps));\n    return [\n      error,\n      error\n        ? {\n            current_password: passwordChange.password,\n            new_password: passwordChange.newps,\n            new_password_confirmation: passwordChange.renewps,\n          }\n        : null,\n    ];\n  };\n\n  React.useImperativeHandle(ref, () => ({\n    sendData,\n  }));\n  return (\n    <Stack spacing={1}>\n      <TextField\n        id=\"password\"\n        sx={{ width: \"25vw\" }}\n        label={labels.textFieldLabels[0]}\n        required\n        value={passwordChange.password}\n        onChange={(event) => {\n          handleChange(\"password\", event.target.value);\n        }}\n        type=\"password\"\n        variant=\"standard\"\n      />\n      <TextField\n        id=\"password\"\n        label={labels.textFieldLabels[1]}\n        type=\"password\"\n        sx={{ width: \"25vw\" }}\n        required\n        error={error}\n        value={passwordChange.newps}\n        onChange={(event) => {\n          handleChange(\"newps\", event.target.value);\n        }}\n        variant=\"standard\"\n      />\n      <TextField\n        id=\"passwordres\"\n        label={labels.textFieldLabels[2]}\n        type=\"password\"\n        sx={{ width: \"25vw\" }}\n        required\n        error={error}\n        value={passwordChange.renewps}\n        onChange={(event) => {\n          handleChange(\"renewps\", event.target.value);\n        }}\n        variant=\"standard\"\n      />\n    </Stack>\n  );\n});\n\nexport default PasswordFragment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}