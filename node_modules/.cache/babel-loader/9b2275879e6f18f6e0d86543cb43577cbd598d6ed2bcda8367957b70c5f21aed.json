{"ast":null,"code":"var _jsxFileName = \"/home/ignacioromang/Projects/AE-Front-End/src/components/VerifyEmail.jsx\",\n  _s = $RefreshSig$();\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport { Stack } from \"@mui/material\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n/**\n * The `VerificationCard` component is a React component that displays a card with a loading spinner\n * and a verification result message.\n *\n * @param {string} id - The unique identifier of the email verification request.\n * @param {string} hash - The cryptographic hash of the email verification request.\n * @returns {JSX.Element} The `VerificationCard` component.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VerificationCard = ({\n  id,\n  hash\n}) => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [verificationResult, setVerificationResult] = useState(null);\n  const navigate = useNavigate();\n\n  /**\n   * The function `verifyEmail` is an asynchronous function that sends a POST request to verify an email\n   * using the provided `id` and `hash`, and updates the verification result accordingly.\n   *\n   * @async\n   */\n  async function verifyEmail() {\n    //TODO Work in progress\n    try {\n      const response = await axios.post(`/email/verify/${id}/${hash}`);\n      if (response.data.success) {\n        setVerificationResult(\"Email verificado exitosamente\");\n      } else {}\n    } catch (error) {\n      console.error(\"Error al verificar el email\", error);\n    } finally {\n      await new Promise(resolve => setTimeout(resolve, 5000));\n      setLoading(false);\n    }\n  }\n  useEffect(() => {\n    verifyEmail();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        padding: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: loading ? /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          sx: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: \"Verificando email...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          sx: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(CheckCircleOutlineIcon, {\n            sx: {\n              fontSize: 40,\n              color: \"green\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            paddingTop: 3,\n            variant: \"body1\",\n            children: verificationResult\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(VerificationCard, \"ofFLsZAGBhuvzl5g90YpqFVTRe0=\", false, function () {\n  return [useNavigate];\n});\n_c = VerificationCard;\nexport default VerificationCard;\nvar _c;\n$RefreshReg$(_c, \"VerificationCard\");","map":{"version":3,"names":["CheckCircleOutlineIcon","Stack","Card","CardContent","CircularProgress","Typography","axios","React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","VerificationCard","id","hash","_s","loading","setLoading","verificationResult","setVerificationResult","navigate","verifyEmail","response","post","data","success","error","console","Promise","resolve","setTimeout","children","sx","padding","spacing","display","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","variant","fontSize","color","paddingTop","_c","$RefreshReg$"],"sources":["/home/ignacioromang/Projects/AE-Front-End/src/components/VerifyEmail.jsx"],"sourcesContent":["import CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport { Stack } from \"@mui/material\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n/**\n * The `VerificationCard` component is a React component that displays a card with a loading spinner\n * and a verification result message.\n *\n * @param {string} id - The unique identifier of the email verification request.\n * @param {string} hash - The cryptographic hash of the email verification request.\n * @returns {JSX.Element} The `VerificationCard` component.\n */\nconst VerificationCard = ({ id, hash }) => {\n  const [loading, setLoading] = useState(true);\n  const [verificationResult, setVerificationResult] = useState(null);\n  const navigate = useNavigate();\n\n  /**\n   * The function `verifyEmail` is an asynchronous function that sends a POST request to verify an email\n   * using the provided `id` and `hash`, and updates the verification result accordingly.\n   *\n   * @async\n   */\n  async function verifyEmail() {\n    //TODO Work in progress\n    try {\n      const response = await axios.post(`/email/verify/${id}/${hash}`);\n\n      if (response.data.success) {\n        setVerificationResult(\"Email verificado exitosamente\");\n      } else {\n      }\n    } catch (error) {\n      console.error(\"Error al verificar el email\", error);\n    } finally {\n      await new Promise((resolve) => setTimeout(resolve, 5000));\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    verifyEmail();\n  }, []);\n\n  return (\n    <Card>\n      <CardContent sx={{ padding: 4 }}>\n        <>\n          {loading ? (\n            <Stack spacing={2} sx={{ display: \"flex\", alignItems: \"center\" }}>\n              <CircularProgress />\n              <Typography variant=\"body1\">{\"Verificando email...\"}</Typography>\n            </Stack>\n          ) : (\n            <Stack spacing={2} sx={{ display: \"flex\", alignItems: \"center\" }}>\n              <CheckCircleOutlineIcon sx={{ fontSize: 40, color: \"green\" }} />\n              <Typography paddingTop={3} variant=\"body1\">\n                {verificationResult}\n              </Typography>\n            </Stack>\n          )}\n        </>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default VerificationCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}