{"ast":null,"code":"var _jsxFileName = \"/home/ignacioromang/Projects/AE-Front-End/src/components/FAQ.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Question from \"../fragments/Question\";\nimport { Paper, Typography } from \"@mui/material\";\nimport axios from \"axios\"; // Asegúrate de importar axios\nimport { useFAQString } from \"../contexts/TextProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FAQ = props => {\n  _s();\n  const [questions, setQuestions] = React.useState([]);\n  const labels = useFAQString();\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let url = process.env.REACT_APP_BACK_URL;\n        const response = await axios.post(url + \"/api/resources/getQuestions\");\n        setQuestions(response.data.map(question => ({\n          ...question,\n          isOpen: false\n        })));\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleQuestionToggle = index => {\n    setQuestions(prevQuestions => {\n      const updatedQuestions = [...prevQuestions];\n      updatedQuestions[index].isOpen = !updatedQuestions[index].isOpen;\n      return updatedQuestions;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      padding: 5,\n      children: labels.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), questions.map((faq, index) => /*#__PURE__*/_jsxDEV(Question, {\n      question: faq.question,\n      answer: faq.answers,\n      open: faq.isOpen,\n      onToggle: () => handleQuestionToggle(index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(FAQ, \"zwhDm/uCM0Z8wRrcJdlcIK49E78=\", false, function () {\n  return [useFAQString];\n});\n_c = FAQ;\nexport default FAQ;\nvar _c;\n$RefreshReg$(_c, \"FAQ\");","map":{"version":3,"names":["React","Question","Paper","Typography","axios","useFAQString","jsxDEV","_jsxDEV","FAQ","props","_s","questions","setQuestions","useState","labels","useEffect","fetchData","url","process","env","REACT_APP_BACK_URL","response","post","data","map","question","isOpen","error","console","handleQuestionToggle","index","prevQuestions","updatedQuestions","children","variant","padding","title","fileName","_jsxFileName","lineNumber","columnNumber","faq","answer","answers","open","onToggle","_c","$RefreshReg$"],"sources":["/home/ignacioromang/Projects/AE-Front-End/src/components/FAQ.jsx"],"sourcesContent":["import React from \"react\";\nimport Question from \"../fragments/Question\";\nimport { Paper, Typography } from \"@mui/material\";\nimport axios from \"axios\"; // Asegúrate de importar axios\nimport { useFAQString } from \"../contexts/TextProvider\";\n\nconst FAQ = (props) => {\n  const [questions, setQuestions] = React.useState([]);\n  const labels = useFAQString();\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let url = process.env.REACT_APP_BACK_URL;\n        const response = await axios.post(url + \"/api/resources/getQuestions\");\n        setQuestions(\n          response.data.map((question) => ({\n            ...question,\n            isOpen: false,\n          }))\n        );\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleQuestionToggle = (index) => {\n    setQuestions((prevQuestions) => {\n      const updatedQuestions = [...prevQuestions];\n      updatedQuestions[index].isOpen = !updatedQuestions[index].isOpen;\n      return updatedQuestions;\n    });\n  };\n\n  return (\n    <Paper>\n      <Typography variant=\"h5\" padding={5}>\n        {labels.title}\n      </Typography>\n      {questions.map((faq, index) => (\n        <Question\n          key={index}\n          question={faq.question}\n          answer={faq.answers}\n          open={faq.isOpen}\n          onToggle={() => handleQuestionToggle(index)}\n        />\n      ))}\n    </Paper>\n  );\n};\n\nexport default FAQ;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,KAAK,EAAEC,UAAU,QAAQ,eAAe;AACjD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,SAASC,YAAY,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,GAAG,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMC,MAAM,GAAGT,YAAY,CAAC,CAAC;EAC7BL,KAAK,CAACe,SAAS,CAAC,MAAM;IACpB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,IAAIC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB;QACxC,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAACL,GAAG,GAAG,6BAA6B,CAAC;QACtEL,YAAY,CACVS,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAEC,QAAQ,KAAM;UAC/B,GAAGA,QAAQ;UACXC,MAAM,EAAE;QACV,CAAC,CAAC,CACJ,CAAC;MACH,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDX,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,oBAAoB,GAAIC,KAAK,IAAK;IACtClB,YAAY,CAAEmB,aAAa,IAAK;MAC9B,MAAMC,gBAAgB,GAAG,CAAC,GAAGD,aAAa,CAAC;MAC3CC,gBAAgB,CAACF,KAAK,CAAC,CAACJ,MAAM,GAAG,CAACM,gBAAgB,CAACF,KAAK,CAAC,CAACJ,MAAM;MAChE,OAAOM,gBAAgB;IACzB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEzB,OAAA,CAACL,KAAK;IAAA+B,QAAA,gBACJ1B,OAAA,CAACJ,UAAU;MAAC+B,OAAO,EAAC,IAAI;MAACC,OAAO,EAAE,CAAE;MAAAF,QAAA,EACjCnB,MAAM,CAACsB;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACZ7B,SAAS,CAACa,GAAG,CAAC,CAACiB,GAAG,EAAEX,KAAK,kBACxBvB,OAAA,CAACN,QAAQ;MAEPwB,QAAQ,EAAEgB,GAAG,CAAChB,QAAS;MACvBiB,MAAM,EAAED,GAAG,CAACE,OAAQ;MACpBC,IAAI,EAAEH,GAAG,CAACf,MAAO;MACjBmB,QAAQ,EAAEA,CAAA,KAAMhB,oBAAoB,CAACC,KAAK;IAAE,GAJvCA,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKX,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEZ,CAAC;AAAC9B,EAAA,CA9CIF,GAAG;EAAA,QAEQH,YAAY;AAAA;AAAAyC,EAAA,GAFvBtC,GAAG;AAgDT,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}