{"ast":null,"code":"var _jsxFileName = \"/home/desa04/AE-Front-End/src/fragments/UserBadge.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Badge from '@mui/material/Badge';\nimport Avatar from '@mui/material/Avatar';\nimport { Box } from '@mui/material';\nimport { stringAvatar } from '../utiles';\nimport { useUserBadgeString } from '../contexts/TextProvider';\nimport { badgeUserAnchorStyle, boxUserbadgeStyle } from '../theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserBadge({\n  username,\n  isActive\n}) {\n  _s();\n  const statusColor = isActive ? \"success\" : \"secondary\";\n  const badgeString = useUserBadgeString();\n  const statusText = isActive ? badgeString.status[0] : useUserBadgeString().status[1];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: boxUserbadgeStyle,\n    children: /*#__PURE__*/_jsxDEV(Badge, {\n      anchorOrigin: badgeUserAnchorStyle,\n      badgeContent: statusText,\n      color: statusColor,\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        ...stringAvatar(username)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_s(UserBadge, \"C8jHFm0Jc71x7LCW+HJjKY72gDw=\", false, function () {\n  return [useUserBadgeString, useUserBadgeString];\n});\n_c = UserBadge;\nexport default UserBadge;\nvar _c;\n$RefreshReg$(_c, \"UserBadge\");","map":{"version":3,"names":["React","Badge","Avatar","Box","stringAvatar","useUserBadgeString","badgeUserAnchorStyle","boxUserbadgeStyle","jsxDEV","_jsxDEV","UserBadge","username","isActive","_s","statusColor","badgeString","statusText","status","sx","children","anchorOrigin","badgeContent","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/desa04/AE-Front-End/src/fragments/UserBadge.jsx"],"sourcesContent":["import React from 'react';\nimport Badge from '@mui/material/Badge';\nimport Avatar from '@mui/material/Avatar';\nimport { Box } from '@mui/material';\nimport { stringAvatar } from '../utiles';\nimport { useUserBadgeString } from '../contexts/TextProvider';\nimport { badgeUserAnchorStyle, boxUserbadgeStyle } from '../theme';\n\nfunction UserBadge({ username, isActive }) {\n    const statusColor = isActive ? \"success\" : \"secondary\";\n    const badgeString = useUserBadgeString();\n    const statusText = isActive ? badgeString.status[0] : useUserBadgeString().status[1];\n\n    return (\n        <Box sx={boxUserbadgeStyle}>\n            <Badge anchorOrigin={badgeUserAnchorStyle} badgeContent={statusText} color={statusColor}>\n                <Avatar {...stringAvatar(username)} ></Avatar>\n            </Badge>\n        </Box>\n    );\n}\n\nexport default UserBadge;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,YAAY,QAAQ,WAAW;AACxC,SAASC,kBAAkB,QAAQ,0BAA0B;AAC7D,SAASC,oBAAoB,EAAEC,iBAAiB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,SAASC,SAASA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAMC,WAAW,GAAGF,QAAQ,GAAG,SAAS,GAAG,WAAW;EACtD,MAAMG,WAAW,GAAGV,kBAAkB,CAAC,CAAC;EACxC,MAAMW,UAAU,GAAGJ,QAAQ,GAAGG,WAAW,CAACE,MAAM,CAAC,CAAC,CAAC,GAAGZ,kBAAkB,CAAC,CAAC,CAACY,MAAM,CAAC,CAAC,CAAC;EAEpF,oBACIR,OAAA,CAACN,GAAG;IAACe,EAAE,EAAEX,iBAAkB;IAAAY,QAAA,eACvBV,OAAA,CAACR,KAAK;MAACmB,YAAY,EAAEd,oBAAqB;MAACe,YAAY,EAAEL,UAAW;MAACM,KAAK,EAAER,WAAY;MAAAK,QAAA,eACpFV,OAAA,CAACP,MAAM;QAAA,GAAKE,YAAY,CAACO,QAAQ;MAAC;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACb,EAAA,CAZQH,SAAS;EAAA,QAEML,kBAAkB,EACgBA,kBAAkB;AAAA;AAAAsB,EAAA,GAHnEjB,SAAS;AAclB,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}