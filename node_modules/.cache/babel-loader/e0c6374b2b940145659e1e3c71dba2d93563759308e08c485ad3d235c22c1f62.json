{"ast":null,"code":"var _jsxFileName = \"/home/ignacioromang/Projects/AE-Front-End/src/fragments/form/DatePlanCard.jsx\",\n  _s = $RefreshSig$();\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\nimport { Box, Button, Stack, TextField, Typography } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport { useDatePlanAEString } from \"../../contexts/TextProvider.jsx\";\nimport { getDates } from \"../../utiles.js\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction generarCodigo() {\n  const caracteres = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  let codigo = \"\";\n  for (let i = 0; i < 6; i++) {\n    const indiceAleatorio = Math.floor(Math.random() * caracteres.length);\n    codigo += caracteres.charAt(indiceAleatorio);\n  }\n  return codigo;\n}\nconst DatePlanAE = ({\n  first\n}) => {\n  _s();\n  const {\n    startDay,\n    fthMonth,\n    sixMonth,\n    lastMonth\n  } = getDates();\n  const labels = useDatePlanAEString();\n  const [code, setCode] = React.useState(generarCodigo());\n  const [codeEnter, setCodeEnter] = React.useState(\"\");\n  const [icon, setIcon] = React.useState(false);\n  const [click, setClick] = React.useState(false);\n  const [timeLeft, setTimeLeft] = React.useState(31);\n  console.log(code);\n  const handleCode = value => {\n    setCodeEnter(value);\n    if (value === code) {\n      setIcon(true);\n      setCode(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    paddingBottom: 3,\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      color: \"primary\",\n      gutterBottom: true,\n      children: labels.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: [labels.body[0], startDay.toLocaleDateString(\"en-GB\"), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), first && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: [labels.body[1], fthMonth.toLocaleDateString(\"en-GB\"), labels.body[2], sixMonth.toLocaleDateString(\"en-GB\"), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: [first ? labels.body[3] : labels.body[4], lastMonth.toLocaleDateString(\"en-GB\"), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: labels.body[5]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      paddingBottom: 2,\n      children: \"Ingresa el codigo de verificacion enviado a tu email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: labels.code,\n      variant: \"outlined\",\n      onChange: event => handleCode(event.target.value),\n      disabled: icon,\n      value: codeEnter,\n      InputProps: {\n        endAdornment: !icon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(RefreshIcon, {\n            style: {\n              cursor: \"pointer\"\n            },\n            disabled: click,\n            color: !click ? \"primary\" : \"#d6dbdf \",\n            onClick: () => {\n              if (!click) {\n                setCode(generarCodigo());\n                setTimeLeft(30);\n                const intervalId = setInterval(() => {\n                  setTimeLeft(prevTime => prevTime - 1);\n                }, 1000);\n                setClick(true);\n                setTimeout(() => {\n                  clearInterval(intervalId);\n                  setIcon(false);\n                  setClick(false);\n                }, 31000);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), click ? /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"9px\",\n              color: \"#d6dbdf \"\n            },\n            children: [timeLeft, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(DatePlanAE, \"/ZSV18HpURZlJ+LONkHdUvH6Fug=\", false, function () {\n  return [useDatePlanAEString];\n});\n_c = DatePlanAE;\nexport default DatePlanAE;\nvar _c;\n$RefreshReg$(_c, \"DatePlanAE\");","map":{"version":3,"names":["RefreshIcon","Box","Button","Stack","TextField","Typography","React","useEffect","useDatePlanAEString","getDates","CheckIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","generarCodigo","caracteres","codigo","i","indiceAleatorio","Math","floor","random","length","charAt","DatePlanAE","first","_s","startDay","fthMonth","sixMonth","lastMonth","labels","code","setCode","useState","codeEnter","setCodeEnter","icon","setIcon","click","setClick","timeLeft","setTimeLeft","console","log","handleCode","value","paddingBottom","textAlign","display","flexDirection","alignItems","justifyContent","children","variant","color","gutterBottom","title","fileName","_jsxFileName","lineNumber","columnNumber","body","toLocaleDateString","label","onChange","event","target","disabled","InputProps","endAdornment","style","cursor","onClick","intervalId","setInterval","prevTime","setTimeout","clearInterval","marginLeft","_c","$RefreshReg$"],"sources":["/home/ignacioromang/Projects/AE-Front-End/src/fragments/form/DatePlanCard.jsx"],"sourcesContent":["import RefreshIcon from \"@mui/icons-material/Refresh\";\nimport { Box, Button, Stack, TextField, Typography } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport { useDatePlanAEString } from \"../../contexts/TextProvider.jsx\";\nimport { getDates } from \"../../utiles.js\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nfunction generarCodigo() {\n  const caracteres = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  let codigo = \"\";\n\n  for (let i = 0; i < 6; i++) {\n    const indiceAleatorio = Math.floor(Math.random() * caracteres.length);\n    codigo += caracteres.charAt(indiceAleatorio);\n  }\n\n  return codigo;\n}\n\nconst DatePlanAE = ({ first }) => {\n  const { startDay, fthMonth, sixMonth, lastMonth } = getDates();\n  const labels = useDatePlanAEString();\n  const [code, setCode] = React.useState(generarCodigo());\n  const [codeEnter, setCodeEnter] = React.useState(\"\");\n  const [icon, setIcon] = React.useState(false);\n  const [click, setClick] = React.useState(false);\n  const [timeLeft, setTimeLeft] = React.useState(31);\n  console.log(code);\n  const handleCode = (value) => {\n    setCodeEnter(value);\n    if (value === code) {\n      setIcon(true);\n      setCode(null);\n    }\n  };\n  return (\n    <Box\n      paddingBottom={3}\n      textAlign=\"center\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Typography variant=\"h4\" color=\"primary\" gutterBottom>\n        {labels.title}\n      </Typography>\n\n      <Typography variant=\"h6\">\n        {labels.body[0]}\n        {startDay.toLocaleDateString(\"en-GB\")}.\n      </Typography>\n      {first && (\n        <Typography variant=\"h6\">\n          {labels.body[1]}\n          {fthMonth.toLocaleDateString(\"en-GB\")}\n          {labels.body[2]}\n          {sixMonth.toLocaleDateString(\"en-GB\")}.\n        </Typography>\n      )}\n      <Typography variant=\"h6\">\n        {first ? labels.body[3] : labels.body[4]}\n        {lastMonth.toLocaleDateString(\"en-GB\")}.\n      </Typography>\n      <Typography variant=\"h6\">{labels.body[5]}</Typography>\n\n      <Typography variant=\"body1\" paddingBottom={2}>\n        Ingresa el codigo de verificacion enviado a tu email\n      </Typography>\n      <TextField\n        label={labels.code}\n        variant=\"outlined\"\n        onChange={(event) => handleCode(event.target.value)}\n        disabled={icon}\n        value={codeEnter}\n        InputProps={{\n          endAdornment: !icon ? (\n            <>\n              <RefreshIcon\n                style={{ cursor: \"pointer\" }}\n                disabled={click}\n                color={!click ? \"primary\" : \"#d6dbdf \"}\n                onClick={() => {\n                  if (!click) {\n                    setCode(generarCodigo());\n                    setTimeLeft(30);\n                    const intervalId = setInterval(() => {\n                      setTimeLeft((prevTime) => prevTime - 1);\n                    }, 1000);\n                    setClick(true);\n                    setTimeout(() => {\n                      clearInterval(intervalId);\n                      setIcon(false);\n                      setClick(false);\n                    }, 31000);\n                  }\n                }}\n              />\n              {click ? (\n                <span style={{ marginLeft: \"9px\", color: \"#d6dbdf \" }}>\n                  {timeLeft}s\n                </span>\n              ) : (\n                <></>\n              )}\n            </>\n          ) : (\n            <CheckIcon />\n          ),\n        }}\n      />\n    </Box>\n  );\n};\nexport default DatePlanAE;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}