{"ast":null,"code":"var _jsxFileName = \"/home/desa04/AE-Front-End/src/fragments/calendar/Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography } from \"@mui/material\";\nimport { getHSL } from \"../../utiles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = ({\n  intStart,\n  intEnd,\n  msg\n}) => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(intStart);\n  const daysInMonth = getDaysInMonth(currentDate);\n  const monthName = new Intl.DateTimeFormat(\"es\", {\n    month: \"long\"\n  }).format(currentDate);\n  const getTableCel = (day, index) => {\n    let {\n      h,\n      s,\n      l\n    } = {\n      h: 228,\n      s: 0,\n      l: 100\n    };\n    let color = getHSL(228, 0, 100);\n    if (intStart === intEnd) {\n      if (day != null && day === intEnd.getDate()) {\n        h = 204;\n        s = 70;\n        l = 63;\n      }\n      // estoy en marcado de un dia\n    } else {\n      //tengo que colorar rango\n      if (day != null && day <= intEnd.getDate()) {\n        h = 6;\n        s = 39;\n        l = 81;\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(TableCell, {\n      on: true,\n      sx: {\n        border: \"1px solid #ddd\",\n        textAlign: \"center\",\n        padding: \"2px\",\n        backgroundColor: getHSL(h, s, l),\n        \"&:hover\": {\n          backgroundColor: getHSL(h, s, l - 10)\n        }\n      },\n      children: day || \" \"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h7\",\n      paddingBottom: 2,\n      children: monthName.charAt(0).toUpperCase() + monthName.slice(1) + \" \" + currentDate.getFullYear()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        maxWidth: \"300px\",\n        margin: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [\"Dom\", \"Lun\", \"Mar\", \"Mié\", \"Jue\", \"Vie\", \"Sáb\"].map((day, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                backgroundColor: \"#f2f2f2\",\n                textAlign: \"center\",\n                padding: \"2px\"\n              },\n              children: day\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: chunkArray(daysInMonth, 7).map((row, rowIndex) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: row.map((day, index) => getTableCel(day, index))\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"KLJ0MZf71pizhZrecnMXGhVhbbo=\");\n_c = Calendar;\nconst getDaysInMonth = date => {\n  const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n  const startingDayOfWeek = firstDay.getDay(); // 0 (Sunday) to 6 (Saturday)\n  const daysInMonth = [];\n\n  // Add empty cells for days before the first day of the month\n  for (let i = 0; i < startingDayOfWeek; i++) {\n    daysInMonth.push(null);\n  }\n  const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n  // Add the days of the month\n  for (let i = 1; i <= lastDay.getDate(); i++) {\n    daysInMonth.push(i);\n  }\n  return daysInMonth;\n};\nconst chunkArray = (arr, size) => {\n  const chunkedArray = [];\n  for (let i = 0; i < arr.length; i += size) {\n    chunkedArray.push(arr.slice(i, i + size));\n  }\n  return chunkedArray;\n};\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","getHSL","jsxDEV","_jsxDEV","Calendar","intStart","intEnd","msg","_s","currentDate","setCurrentDate","daysInMonth","getDaysInMonth","monthName","Intl","DateTimeFormat","month","format","getTableCel","day","index","h","s","l","color","getDate","on","sx","border","textAlign","padding","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","paddingBottom","charAt","toUpperCase","slice","getFullYear","component","maxWidth","margin","map","chunkArray","row","rowIndex","_c","date","firstDay","Date","getMonth","startingDayOfWeek","getDay","i","push","lastDay","arr","size","chunkedArray","length","$RefreshReg$"],"sources":["/home/desa04/AE-Front-End/src/fragments/calendar/Calendar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Typography,\n} from \"@mui/material\";\nimport { getHSL } from \"../../utiles\";\n\nconst Calendar = ({ intStart, intEnd, msg }) => {\n  const [currentDate, setCurrentDate] = useState(intStart);\n\n  const daysInMonth = getDaysInMonth(currentDate);\n\n  const monthName = new Intl.DateTimeFormat(\"es\", { month: \"long\" }).format(\n    currentDate\n  );\n  const getTableCel = (day, index) => {\n    let { h, s, l } = { h: 228, s: 0, l: 100 };\n    let color = getHSL(228, 0, 100);\n    if (intStart === intEnd) {\n      if (day != null && day === intEnd.getDate()) {\n        h = 204;\n        s = 70;\n        l = 63;\n      }\n      // estoy en marcado de un dia\n    } else {\n      //tengo que colorar rango\n      if (day != null && day <= intEnd.getDate()) {\n        h = 6;\n        s = 39;\n        l = 81;\n      }\n    }\n    return (\n      <TableCell\n      on\n        key={index}\n        sx={{\n          border: \"1px solid #ddd\",\n          textAlign: \"center\",\n          padding: \"2px\",\n          backgroundColor: getHSL(h, s, l),\n          \"&:hover\": {\n            backgroundColor: getHSL(h, s, l - 10),\n          },\n        }}\n      >\n        {day || \" \"}\n      </TableCell>\n    );\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h7\" paddingBottom={2}>\n        {monthName.charAt(0).toUpperCase() +\n          monthName.slice(1) +\n          \" \" +\n          currentDate.getFullYear()}\n      </Typography>\n      <TableContainer\n        component={Paper}\n        sx={{ maxWidth: \"300px\", margin: \"auto\" }}\n      >\n        <Table>\n          <TableHead>\n            <TableRow>\n              {[\"Dom\", \"Lun\", \"Mar\", \"Mié\", \"Jue\", \"Vie\", \"Sáb\"].map(\n                (day, index) => (\n                  <TableCell\n                    key={index}\n                    sx={{\n                      backgroundColor: \"#f2f2f2\",\n                      textAlign: \"center\",\n                      padding: \"2px\",\n                    }}\n                  >\n                    {day}\n                  </TableCell>\n                )\n              )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {chunkArray(daysInMonth, 7).map((row, rowIndex) => (\n              <TableRow key={rowIndex}>\n                {row.map((day, index) => getTableCel(day, index))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nconst getDaysInMonth = (date) => {\n  const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n  const startingDayOfWeek = firstDay.getDay(); // 0 (Sunday) to 6 (Saturday)\n  const daysInMonth = [];\n\n  // Add empty cells for days before the first day of the month\n  for (let i = 0; i < startingDayOfWeek; i++) {\n    daysInMonth.push(null);\n  }\n\n  const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n  // Add the days of the month\n  for (let i = 1; i <= lastDay.getDate(); i++) {\n    daysInMonth.push(i);\n  }\n\n  return daysInMonth;\n};\n\nconst chunkArray = (arr, size) => {\n  const chunkedArray = [];\n  for (let i = 0; i < arr.length; i += size) {\n    chunkedArray.push(arr.slice(i, i + size));\n  }\n  return chunkedArray;\n};\n\nexport default Calendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}