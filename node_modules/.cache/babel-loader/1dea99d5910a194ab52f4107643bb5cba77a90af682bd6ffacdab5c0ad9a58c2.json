{"ast":null,"code":"var _jsxFileName = \"/home/ignacioromang/Projects/AE-Front-End/src/fragments/LoginFragment.jsx\",\n  _s = $RefreshSig$();\nimport { Stack, TextField } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useLoginString } from \"../contexts/TextProvider.jsx\";\nimport { doformatCUIL } from \"../utiles.js\";\nimport axios from \"axios\";\n\n//TODO QUITAR TEMAS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginFragment = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n  const [labels, assets] = useLoginString();\n  const [loginSuccess, setLoginSuccess] = React.useState(false);\n  const [loginFail, setLoginFail] = React.useState(false);\n  const [formattedCUIL, setFormattedCUIL] = useState(\"\");\n  const handleInputChange = event => {\n    const inputValue = event.target.value;\n    let formatted = doformatCUIL(inputValue);\n    setFormattedCUIL(formatted);\n  };\n  const [passwordsd, setPassword] = React.useState(\"\");\n  const handleOnChangePassword = event => {\n    setPassword(event.target.value);\n  };\n  const getData = async () => {\n    let url = process.env.REACT_APP_BACK_URL;\n    let user = null;\n    let csrfToken = null;\n    let auth = null;\n    await axios.post(`${url}/api/auth/login`, {\n      cuil: formattedCUIL,\n      password: passwordsd\n    }, {\n      withCredentials: true // Agrega esta opción para incluir las credenciales\n    }).then(response => {\n      auth = response.data.authorization;\n      sessionStorage.setItem(\"authorization\", auth);\n      if (response.data !== null) {\n        let names = response.data.user.name.split(\" \");\n        user = {\n          name: names[0],\n          cuil: response.data.user.cuil,\n          lastname: names[1],\n          ae: true\n        };\n      }\n      axios.defaults.headers.common[\"X-CSRF-TOKEN\"] = csrfToken;\n      axios.defaults.headers.common[\"User-Agent\"] = \"FRONT-END-REACT\";\n      axios.defaults.headers.common[\"Authorization\"] = auth.type + auth.token;\n    }).catch(e => {\n      console.error(\"Error durante el inicio de sesión:\");\n    });\n    return user;\n  };\n  React.useImperativeHandle(ref, () => ({\n    getData\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          width: \"100%\",\n          // Ancho completo en pantallas móviles\n          \"@media (min-width: 600px)\": {\n            // Ajusta según sea necesario para tamaños mayores\n            width: \"25vw\"\n          }\n        },\n        id: \"cuil\",\n        label: labels.textFieldLabels.user,\n        required: true,\n        disabled: loginSuccess,\n        error: loginFail,\n        value: formattedCUIL,\n        onChange: handleInputChange,\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          width: \"100%\",\n          // Ancho completo en pantallas móviles\n          \"@media (min-width: 600px)\": {\n            // Ajusta según sea necesario para tamaños mayores\n            width: \"25vw\"\n          }\n        },\n        id: \"password\",\n        label: labels.textFieldLabels.password,\n        type: \"password\",\n        required: true,\n        value: passwordsd,\n        onChange: handleOnChangePassword,\n        error: loginFail,\n        disabled: loginSuccess,\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"MHeYqvTl3/h84K499ir7Bv5ZhsM=\", false, function () {\n  return [useLoginString];\n})), \"MHeYqvTl3/h84K499ir7Bv5ZhsM=\", false, function () {\n  return [useLoginString];\n});\n_c2 = LoginFragment;\nexport default LoginFragment;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginFragment$React.forwardRef\");\n$RefreshReg$(_c2, \"LoginFragment\");","map":{"version":3,"names":["Stack","TextField","React","useState","useLoginString","doformatCUIL","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginFragment","_s","forwardRef","_c","props","ref","labels","assets","loginSuccess","setLoginSuccess","loginFail","setLoginFail","formattedCUIL","setFormattedCUIL","handleInputChange","event","inputValue","target","value","formatted","passwordsd","setPassword","handleOnChangePassword","getData","url","process","env","REACT_APP_BACK_URL","user","csrfToken","auth","post","cuil","password","withCredentials","then","response","data","authorization","sessionStorage","setItem","names","name","split","lastname","ae","defaults","headers","common","type","token","catch","e","console","error","useImperativeHandle","children","spacing","sx","width","id","label","textFieldLabels","required","disabled","onChange","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/ignacioromang/Projects/AE-Front-End/src/fragments/LoginFragment.jsx"],"sourcesContent":["import { Stack, TextField } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useLoginString } from \"../contexts/TextProvider.jsx\";\nimport { doformatCUIL } from \"../utiles.js\";\nimport axios from \"axios\";\n\n//TODO QUITAR TEMAS\nconst LoginFragment = React.forwardRef((props, ref) => {\n  const [labels, assets] = useLoginString();\n\n  const [loginSuccess, setLoginSuccess] = React.useState(false);\n  const [loginFail, setLoginFail] = React.useState(false);\n\n  const [formattedCUIL, setFormattedCUIL] = useState(\"\");\n\n  const handleInputChange = (event) => {\n    const inputValue = event.target.value;\n    let formatted = doformatCUIL(inputValue);\n\n    setFormattedCUIL(formatted);\n  };\n\n  const [passwordsd, setPassword] = React.useState(\"\");\n\n  const handleOnChangePassword = (event) => {\n    setPassword(event.target.value);\n  };\n  const getData = async () => {\n    let url = process.env.REACT_APP_BACK_URL;\n    let user = null;\n    let csrfToken = null;\n    let auth = null;\n    await axios\n      .post(\n        `${url}/api/auth/login`,\n        {\n          cuil: formattedCUIL,\n          password: passwordsd,\n        },\n        {\n          withCredentials: true, // Agrega esta opción para incluir las credenciales\n        }\n      )\n      .then((response) => {\n        auth = response.data.authorization;\n        sessionStorage.setItem(\"authorization\", auth);\n        if (response.data !== null) {\n          let names = response.data.user.name.split(\" \");\n          user = {\n            name: names[0],\n            cuil: response.data.user.cuil,\n            lastname: names[1],\n            ae: true,\n          };\n        }\n        axios.defaults.headers.common[\"X-CSRF-TOKEN\"] = csrfToken;\n        axios.defaults.headers.common[\"User-Agent\"] = \"FRONT-END-REACT\";\n        axios.defaults.headers.common[\"Authorization\"] = auth.type + auth.token;\n      })\n      .catch((e) => {\n        console.error(\"Error durante el inicio de sesión:\");\n      });\n\n    return user;\n  };\n\n  React.useImperativeHandle(ref, () => ({\n    getData,\n  }));\n\n  return (\n    <>\n      {\" \"}\n      <Stack spacing={2}>\n        <TextField\n          sx={{\n            width: \"100%\", // Ancho completo en pantallas móviles\n            \"@media (min-width: 600px)\": {\n              // Ajusta según sea necesario para tamaños mayores\n              width: \"25vw\",\n            },\n          }}\n          id=\"cuil\"\n          label={labels.textFieldLabels.user}\n          required\n          disabled={loginSuccess}\n          error={loginFail}\n          value={formattedCUIL}\n          onChange={handleInputChange}\n          variant=\"standard\"\n        />\n        <TextField\n          sx={{\n            width: \"100%\", // Ancho completo en pantallas móviles\n            \"@media (min-width: 600px)\": {\n              // Ajusta según sea necesario para tamaños mayores\n              width: \"25vw\",\n            },\n          }}\n          id=\"password\"\n          label={labels.textFieldLabels.password}\n          type=\"password\"\n          required\n          value={passwordsd}\n          onChange={handleOnChangePassword}\n          error={loginFail}\n          disabled={loginSuccess}\n          variant=\"standard\"\n        />\n      </Stack>\n    </>\n  );\n});\n\nexport default LoginFragment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}